{"version":3,"sources":["components/FormInput.js","components/Form.js","components/Header.js","components/RenderEmpDetail.js","components/RenderListEmployee.js","components/App.js","index.js"],"names":["FormInput","props","htmlFor","label","className","type","name","id","onChange","ev","handleValueInput","target","value","Form","onClick","addEmployee","Header","RenderEmpDetail","val","age","country","position","wage","RenderListEmployee","getEmployees","employeeList","map","key","placeholder","handleValueUpdate","updateEmployee","deleteEmployee","App","useState","setName","setAge","setCountry","setPosition","setWage","newWage","setNewWage","setEmployeeList","preventDefault","bodyParams","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","currentTarget","filter","ReactDOM","render","document","getElementById"],"mappings":"2NAoBeA,EApBG,SAACC,GAIf,OACI,qCACI,uBAAOC,QAASD,EAAME,MAAOC,UAAU,cAAvC,SACKH,EAAME,QAEX,uBACIC,UAAU,cACVC,KAAMJ,EAAMI,KACZC,KAAML,EAAMK,KACZC,GAAIN,EAAMM,GACVC,SAbgB,SAACC,GACzBR,EAAMS,iBAAiBD,EAAGE,OAAOC,MAAOH,EAAGE,OAAOJ,WC2C3CM,EA3CF,SAACZ,GAEV,OAAQ,kCAEJ,uBAAMG,UAAU,OAAhB,UACI,sDACA,cAAC,EAAD,CACID,MAAM,uBACNE,KAAK,OACLC,KAAK,OACLC,GAAG,OACHG,iBAAkBT,EAAMS,mBAE5B,cAAC,EAAD,CACIP,MAAM,QACNE,KAAK,SACLC,KAAK,MACLC,GAAG,MACHG,iBAAkBT,EAAMS,mBAC5B,cAAC,EAAD,CACIP,MAAM,YACNE,KAAK,OACLC,KAAK,UACLC,GAAG,UACHG,iBAAkBT,EAAMS,mBAC5B,cAAC,EAAD,CACIP,MAAM,aACNE,KAAK,OACLC,KAAK,YACLC,GAAG,WACHG,iBAAkBT,EAAMS,mBAC5B,cAAC,EAAD,CACIP,MAAM,oBACNE,KAAK,SACLC,KAAK,QACLC,GAAG,OACHG,iBAAkBT,EAAMS,mBAE5B,wBAAQN,UAAU,eAAeU,QAASb,EAAMc,YAAhD,oCChCGC,EARA,WACX,OACI,wBAAQZ,UAAU,SAAlB,SACI,oBAAIA,UAAU,gBAAd,sCC2BGa,EA9BS,SAAChB,GACrB,OACI,qCACI,+CAEI,sBAAMG,UAAU,8BAAhB,SAA+CH,EAAMiB,IAAIZ,UAE7D,qCAEI,sBAAMF,UAAU,8BAAhB,SAA+CH,EAAMiB,IAAIC,SAE7D,yCAEI,sBAAMf,UAAU,8BAAhB,SAA+CH,EAAMiB,IAAIE,aAG7D,0CAEI,sBAAMhB,UAAU,8BAAhB,SACKH,EAAMiB,IAAIG,cAGnB,sCAEI,uBAAMjB,UAAU,8BAAhB,cAAgDH,EAAMiB,IAAII,KAA1D,cCgCDC,EAtDY,SAACtB,GACxB,OACI,0BAASG,UAAU,WAAnB,UACI,mDACA,8BACI,wBAAQA,UAAU,gBAAgBU,QAASb,EAAMuB,aAAjD,mCAIHvB,EAAMwB,aAAaC,KAAI,SAACR,EAAKS,GAC1B,OACI,sBAAKvB,UAAU,cAAf,UACI,oBAAIA,UAAU,oBAAd,SACI,qBAAcA,UAAU,uBAAxB,UACI,6CAEI,sBAAMA,UAAU,8BAAhB,SAA+CuB,EAAM,OAGzD,cAAC,EAAD,CAAiBT,IAAKA,MANjBS,KAUb,sBAAKvB,UAAU,2BAAf,UACI,uBAAOF,QAAQ,GAAf,sCACA,uBACIG,KAAK,OACLC,KAAK,aACLC,GAAG,aACHqB,YAAY,gBACZpB,SAAUP,EAAM4B,oBAGpB,wBACIzB,UAAU,sCACVU,QAAS,kBAAMb,EAAM6B,eAAeZ,EAAIX,KAF5C,oBAOA,wBACIH,UAAU,sCACVU,QAAS,kBAAMb,EAAM8B,eAAeb,EAAIX,KAF5C,0CCoHbyB,MApJf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOd,EAAP,KAAYgB,EAAZ,KACA,EAA8BF,mBAAS,IAAvC,mBAAOb,EAAP,KAAgBgB,EAAhB,KACA,EAAgCH,mBAAS,IAAzC,mBAAOZ,EAAP,KAAiBgB,EAAjB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOX,EAAP,KAAagB,EAAb,KAEA,EAA8BL,mBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAEA,EAAwCP,mBAAS,IAAjD,mBAAOR,EAAP,KAAqBgB,EAArB,KAyHA,OACE,qCACE,cAAC,EAAD,IACA,iCACE,cAAC,EAAD,CAAM/B,iBAvBa,SAACE,EAAOL,GACpB,SAAPA,EACF2B,EAAQtB,GACQ,QAAPL,EACT4B,EAAOvB,GACS,YAAPL,EACT6B,EAAWxB,GACK,aAAPL,EACT8B,EAAYzB,GACI,SAAPL,GACT+B,EAAQ1B,IAaoCG,YA1H5B,SAACN,GACnBA,EAAGiC,iBACH,IAAMC,EAAa,CACjBrC,KAAMA,EACNa,IAAKA,EACLC,QAASA,EACTC,SAAUA,EACVC,KAAMA,GAIR,OAAOsB,MAAM,+BAAgC,CAC3CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,WACJT,EAAgB,GAAD,mBACVhB,GADU,CAEb,CACEnB,KAAMA,EACNa,IAAKA,EACLC,QAASA,EACTC,SAAUA,EACVC,KAAMA,YAgGV,cAAC,EAAD,CACEG,aAAcA,EACdD,aA3Fa,SAACf,GAEpB,OADAA,EAAGiC,iBAEDE,MAAM,mCAEHM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAE5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZZ,EAAgBY,OAmFhBxB,kBAbkB,SAACpB,GACzB,IAAMG,EAAQH,EAAG+C,cAAc5C,MAC/B4B,EAAW5B,IAYLkB,eA9Ee,SAACvB,GACtB,IAAMoC,EAAa,CACjBrB,KAAMiB,EACNhC,GAAIA,GAEN,OACEqC,MAAM,+BAAgC,CACpCC,OAAQ,QACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAGpBO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,WACJT,EACEhB,EAAaC,KAAI,SAACR,GAChB,OAAOA,EAAIX,KAAOA,EACd,CACAA,GAAIW,EAAIX,GACRD,KAAMY,EAAIZ,KACVc,QAASF,EAAIE,QACbD,IAAKD,EAAIC,IACTE,SAAUH,EAAIG,SACdC,KAAMiB,GAENrB,UAoDRa,eA3Ce,SAACxB,GACtB,OAAOqC,MAAM,yCAAD,OAA0CrC,GAAM,CAC1DsC,OAAQ,WACPK,MAAK,SAACC,GAEPV,EACEhB,EAAagC,QAAO,SAACvC,GACnB,OAAOA,EAAIX,KAAOA,mBC5G5BmD,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.68676cbd.chunk.js","sourcesContent":["const FormInput = (props) => {\r\n    const handleOnchangeInput = (ev) => {\r\n        props.handleValueInput(ev.target.value, ev.target.id);\r\n    };\r\n    return (\r\n        <>\r\n            <label htmlFor={props.label} className=\"form__label\">\r\n                {props.label}\r\n            </label>\r\n            <input\r\n                className=\"form__input\"\r\n                type={props.type}\r\n                name={props.name}\r\n                id={props.id}\r\n                onChange={handleOnchangeInput}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n","import FormInput from \"./FormInput\"\r\n\r\nconst Form = (props) => {\r\n\r\n    return (<section>\r\n\r\n        <form className=\"form\">\r\n            <h2>Employee Information</h2>\r\n            <FormInput\r\n                label=' Name and Last Name '\r\n                type='text'\r\n                name='name'\r\n                id='name'\r\n                handleValueInput={props.handleValueInput} />\r\n\r\n            <FormInput\r\n                label=' Age '\r\n                type='number'\r\n                name='age'\r\n                id='age'\r\n                handleValueInput={props.handleValueInput} />\r\n            <FormInput\r\n                label=' Country '\r\n                type='text'\r\n                name='country'\r\n                id='country'\r\n                handleValueInput={props.handleValueInput} />\r\n            <FormInput\r\n                label=' Position '\r\n                type='text'\r\n                name='position '\r\n                id='position'\r\n                handleValueInput={props.handleValueInput} />\r\n            <FormInput\r\n                label=' Wage (EUR/year) '\r\n                type='number'\r\n                name='wage '\r\n                id='wage'\r\n                handleValueInput={props.handleValueInput} />\r\n\r\n            <button className='form__addBtn' onClick={props.addEmployee}>Add new employee</button>\r\n        </form>\r\n    </section>)\r\n}\r\n\r\nexport default Form","const Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\"> HR MANAGEMENT SYSTEM</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","const RenderEmpDetail = (props) => {\r\n    return (\r\n        <>\r\n            <p>\r\n                Name employee:\r\n                <span className=\"allEmployee__details--value\">{props.val.name}</span>\r\n            </p>\r\n            <p>\r\n                Age:\r\n                <span className=\"allEmployee__details--value\">{props.val.age}</span>\r\n            </p>\r\n            <p>\r\n                Country:\r\n                <span className=\"allEmployee__details--value\">{props.val.country}</span>\r\n            </p>\r\n\r\n            <p>\r\n                Position:\r\n                <span className=\"allEmployee__details--value\">\r\n                    {props.val.position}\r\n                </span>\r\n            </p>\r\n            <p>\r\n                Wage:\r\n                <span className=\"allEmployee__details--value\"> {props.val.wage} </span>\r\n            </p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RenderEmpDetail;\r\n","import RenderEmpDetail from \"./RenderEmpDetail\";\r\n\r\nconst RenderListEmployee = (props) => {\r\n    return (\r\n        <section className=\"database\">\r\n            <h3>Employee database</h3>\r\n            <div>\r\n                <button className=\"form__showBtn\" onClick={props.getEmployees}>\r\n                    Show employees list\r\n                </button>\r\n            </div>\r\n            {props.employeeList.map((val, key) => {\r\n                return (\r\n                    <div className=\"allEmployee\">\r\n                        <ul className=\"allEmployee__list\">\r\n                            <li key={key} className=\"allEmployee__details\">\r\n                                <p>\r\n                                    Id employee:\r\n                                    <span className=\"allEmployee__details--value\">{key + 1}</span>\r\n                                </p>\r\n\r\n                                <RenderEmpDetail val={val} />\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <div className=\"allEmployee__updatedList\">\r\n                            <label htmlFor=\"\"> Update Wage (EUR/year) </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"wageUpdate\"\r\n                                id=\"wageUpdate\"\r\n                                placeholder=\"update salary\"\r\n                                onChange={props.handleValueUpdate}\r\n                            />\r\n\r\n                            <button\r\n                                className=\"allEmployee__updatedList--updateBtn\"\r\n                                onClick={() => props.updateEmployee(val.id)}\r\n                            >\r\n                                Update\r\n                            </button>\r\n\r\n                            <button\r\n                                className=\"allEmployee__updatedList--updateBtn\"\r\n                                onClick={() => props.deleteEmployee(val.id)}\r\n                            >\r\n                                Delete employee\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default RenderListEmployee;\r\n","// Fichero src/components/App.js\r\n\r\nimport \"../styles/App.scss\";\r\nimport { useEffect, useState } from \"react\";\r\n//import ls from '../services/localStorage';\r\n\r\nimport Form from \"./Form\";\r\nimport Header from \"./Header\";\r\nimport RenderListEmployee from \"./RenderListEmployee\";\r\n\r\nfunction App() {\r\n  //constantes\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [country, setCountry] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [wage, setWage] = useState(0);\r\n\r\n  const [newWage, setNewWage] = useState(0);\r\n  //array donde guardo los employee list\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n\r\n  // create new employee en database with endpoint CREATE\r\n  const addEmployee = (ev) => {\r\n    ev.preventDefault();\r\n    const bodyParams = {\r\n      name: name,\r\n      age: age,\r\n      country: country,\r\n      position: position,\r\n      wage: wage,\r\n    };\r\n    //console.log(bodyParams);\r\n\r\n    return fetch(\"http://localhost:3001/create\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(bodyParams),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        setEmployeeList([\r\n          ...employeeList,\r\n          {\r\n            name: name,\r\n            age: age,\r\n            country: country,\r\n            position: position,\r\n            wage: wage,\r\n          },\r\n        ]);\r\n      });\r\n  };\r\n\r\n  //get all employees in database clicking button\r\n  const getEmployees = (ev) => {\r\n    ev.preventDefault();\r\n    return (\r\n      fetch(\"http://localhost:3001/employees\")\r\n        //the response is whatever we have in the backend we send it to the frontend\r\n        .then((response) => response.json())\r\n        //el data es el array de objetos en la base datos\r\n        .then((data) => {\r\n          console.log(data);\r\n          setEmployeeList(data);\r\n        })\r\n    );\r\n  };\r\n\r\n  //update employee Wage\r\n  const updateEmployee = (id) => {\r\n    const bodyParams = {\r\n      wage: newWage,\r\n      id: id,\r\n    };\r\n    return (\r\n      fetch(\"http://localhost:3001/update\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(bodyParams),\r\n      })\r\n        //the response is whatever we have in the backend we send it to the frontend\r\n        .then((response) => response.json())\r\n        .then(() => {\r\n          setEmployeeList(\r\n            employeeList.map((val) => {\r\n              return val.id === id\r\n                ? {\r\n                  id: val.id,\r\n                  name: val.name,\r\n                  country: val.country,\r\n                  age: val.age,\r\n                  position: val.position,\r\n                  wage: newWage,\r\n                }\r\n                : val;\r\n            })\r\n          );\r\n        })\r\n    );\r\n  };\r\n\r\n  //delete employee from database\r\n\r\n  const deleteEmployee = (id) => {\r\n    return fetch(`http://localhost:3001/employee/delete/${id}`, {\r\n      method: \"DELETE\",\r\n    }).then((response) => {\r\n      //to erase directly forn the front the employee info\r\n      setEmployeeList(\r\n        employeeList.filter((val) => {\r\n          return val.id !== id;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  //handle Input of form\r\n  const handleValueInput = (value, id) => {\r\n    if (id === \"name\") {\r\n      setName(value);\r\n    } else if (id === \"age\") {\r\n      setAge(value);\r\n    } else if (id === \"country\") {\r\n      setCountry(value);\r\n    } else if (id === \"position\") {\r\n      setPosition(value);\r\n    } else if (id === \"wage\") {\r\n      setWage(value);\r\n    }\r\n  };\r\n\r\n  const handleValueUpdate = (ev) => {\r\n    const value = ev.currentTarget.value;\r\n    setNewWage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <Form handleValueInput={handleValueInput} addEmployee={addEmployee} />\r\n        <RenderListEmployee\r\n          employeeList={employeeList}\r\n          getEmployees={getEmployees}\r\n          handleValueUpdate={handleValueUpdate}\r\n          updateEmployee={updateEmployee}\r\n          deleteEmployee={deleteEmployee}\r\n        />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}